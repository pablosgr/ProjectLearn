version: '3.8'

services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "5173:5173"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - api
    networks:
      - app-network

  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    volumes:
      - ./api:/var/www
      - /var/www/vendor
    environment:
      DATABASE_URL: "mysql://root:@db:3306/track_learn_db"
    depends_on:
      - db
    networks:
      - app-network

  php-scripts:
    build:
      context: ./php_scripts
      dockerfile: Dockerfile
    volumes:
      - ./php_scripts:/var/www/html
    depends_on:
      - db
    networks:
      - app-network

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./api:/var/www
    depends_on:
      - api
      - php-scripts
    networks:
      - app-network

  db:
    image: mariadb:10.4
    ports:
      - "3306:3306"
    environment:
      MYSQL_DATABASE: track_learn_db
      MYSQL_ALLOW_EMPTY_PASSWORD: 'yes'
      MYSQL_ROOT_HOST: '%'
    command: [
      '--default-authentication-plugin=mysql_native_password',
      '--character-set-server=utf8mb4',
      '--collation-server=utf8mb4_unicode_ci'
    ]
    volumes:
      - dbdata:/var/lib/mysql
    networks:
      - app-network

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    ports:
      - "8080:80"
    environment:
      PMA_HOST: db
      PMA_USER: root
      PMA_PASSWORD: ""
    depends_on:
      - db
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  dbdata: